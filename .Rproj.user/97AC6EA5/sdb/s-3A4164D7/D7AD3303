{
    "collab_server" : "",
    "contents" : "library(tidyverse)\n\nguns <- read_csv('gun_sale_database-openrefined.csv', col_names = T)\nshops <- read_csv('active_firearms_dealers.csv')\nguns2 <- read_csv('gun_sale_database.csv')\n\n\n#this database also may contain non-gun parts like magazines and other gun accessories. May need to split data into two sets one that has null items under barrel length one that does not have nulls in barrel length. \n#I also found through some testing that there are duplicate values in application numbers....I first detected this when I did a left join and got more observations then when I started. That will have to be dealt witjh at a later date.  I don't know why this is and will ask the state police upon getting a new version of this data. However, for the time being, I will use the distinct() operator in DPLYR to see if I can try and cut out these duplicates. \n\n#NOTICED THAT there are multiple values in the guns table. \n#guns_count <- guns %>%\n#  group_by (`Application Number`)%>%\n#  summarise(count = n()) %>%\n#  arrange(desc(count))\n\n#went back and made sure the appliocation numbers and observation values are the same before and after data cleaning. The code is noted out so it doesn't run unless needed, but saved for posterity.  \n#guns <- read_csv('gun_sale_database-openrefined.csv', col_names = T)\n#guns2 <- read_csv('gun_sale_database.csv')\n\n#for both below, I found that there are 77 observations for this application number in both datasets.  \n#guns_filter <- guns %>%\n#  filter(`Application Number` == '2017014401')\n\n#guns2_filter <- guns2 %>%\n#  filter(`Application Number` == '2017014401')\n\n#So now I will try and get only unique application numbers to try and cut down with my dupllicates before I do a left join, in hopes that I will get the same number of values both before and after the join. \n\ndistinct_guns <- distinct(guns, `Application Number`, .keep_all = TRUE)\n  \n#ok. So now I have a distinct_guns table with 39946 obsewrvations. I will run a left join hopefully will get the same values coming out of the join. \n  \nguns_and_shops <-  left_join(guns, shops, by = c(\"Dealer Name\", \"Dealer Name\"))\n\n\nguns_and_shops_count <- guns_and_shops %>%\n  group_by (`Application Number`)%>%\n  summarise(count = n()) %>%\n  arrange(desc(count))\n\n\n\n\n\nguns_count <- guns %>%\n  #the colum we are grouping \n  group_by(`Contributor Type`)  %>%\n  #creates a count with the row name being count. The n value is the number of times it occurs\n  summarise(count = n(), total = sum(`Contribution Amount`,  na.rm = TRUE)) %>%\n  #arrange the list in descending order\n  arrange(desc(total)) \nView(jealous_contribution_type)\njealous_contribution_type[1:10,]\n\n",
    "created" : 1521302742930.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3128270773",
    "id" : "D7AD3303",
    "lastKnownWriteTime" : 1521309747,
    "last_content_update" : 1521309747356,
    "path" : "~/Documents/GitHub/gun_examination/gun_examination_code.R",
    "project_path" : "gun_examination_code.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}