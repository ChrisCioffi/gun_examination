#guns_count <- guns %>%
#  group_by (`Application Number`)%>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
#went back and made sure the appliocation numbers and observation values are the same before and after data cleaning. The code is noted out so it doesn't run unless needed, but saved for posterity.
#guns <- read_csv('gun_sale_database-openrefined.csv', col_names = T)
#guns2 <- read_csv('gun_sale_database.csv')
#for both below, I found that there are 77 observations for this application number in both datasets.
#guns_filter <- guns %>%
#  filter(`Application Number` == '2017014401')
#guns2_filter <- guns2 %>%
#  filter(`Application Number` == '2017014401')
#So now I will try and get only unique application numbers to try and cut down with my dupllicates before I do a left join, in hopes that I will get the same number of values both before and after the join.
distinct_guns <- distinct(guns, `Application Number`, .keep_all = TRUE)
#ok. So now I have a distinct_guns table with 39946 obsewrvations. I will run a left join hopefully will get the same values coming out of the join.
guns_and_shops <-  left_join(guns, shops, by = c("Dealer Name", "Dealer Name"))
guns_and_shops <-  left_join(guns, shops, by = "Dealer Name")
View(distinct_guns)
View(shops)
View(guns)
View(distinct_guns)
library(tidyverse)
guns <- read_csv('gun_sale_database-openrefined.csv')
#First, I used Tabula to create a CSV from a PDF. Then, in an effort to reduce duplicates when joining the tables, which don't have this unique ID number that is included in the PDF....I'll ask about that when I hear from the State Police. In the meantime, I did a slight modification to this sheet. I removed one of the Atlantic Guns locations. They are both in Montgomery county, but were getting doubled, I also removed a duplicate in spelling J & S pawn had two separate spellings of the same address. And I changed the name of 1237 gun shop to .1237 to be consisitent with the guns table it is saved into a new spreadsheet.
shops <- read_csv('mid_active_firearms_dealers.csv')
#this database also may contain non-gun parts like magazines and other gun accessories. May need to split data into two sets one that has null items under barrel length one that does not have nulls in barrel length.
#I also found through some testing that there are duplicate values in application numbers....I first detected this when I did a left join and got more observations then when I started. That will have to be dealt witjh at a later date.  I don't know why this is and will ask the state police upon getting a new version of this data. However, for the time being, I will use the distinct() operator in DPLYR to see if I can try and cut out these duplicates.
#NOTICED THAT there are multiple values in the guns table.
#guns_count <- guns %>%
#  group_by (`Application Number`)%>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
#went back and made sure the appliocation numbers and observation values are the same before and after data cleaning. The code is noted out so it doesn't run unless needed, but saved for posterity.
#guns <- read_csv('gun_sale_database-openrefined.csv', col_names = T)
#guns2 <- read_csv('gun_sale_database.csv')
#for both below, I found that there are 77 observations for this application number in both datasets.
#guns_filter <- guns %>%
#  filter(`Application Number` == '2017014401')
#guns2_filter <- guns2 %>%
#  filter(`Application Number` == '2017014401')
#So now I will try and get only unique application numbers to try and cut down with my dupllicates before I do a left join, in hopes that I will get the same number of values both before and after the join.
distinct_guns <- distinct(guns, `Application Number`, .keep_all = TRUE)
guns_and_shops <-  left_join(guns, shops, by = "Dealer Name")
shops <- read_csv('mod_active_firearms_dealers.csv')
guns_and_shops <-  left_join(guns, shops, by = "Dealer Name")
guns_and_shops <-  left_join(distinct_guns, shops, by = "Dealer Name")
guns_and_shops <-  left_join(distinct_guns, shops, by = "Dealer Name")
39946-40055
View(guns_and_shops)
distinct_guns_test <- distinct(guns_and_shops, `Application Number`, .keep_all = TRUE)
guns_and_shops_count <- guns_and_shops %>%
group_by (`Application Number`)%>%
summarise(count = n()) %>%
arrange(desc(count))
View(guns_and_shops_count)
library(tidyverse)
guns <- read_csv('gun_sale_database-openrefined.csv')
#First, I used Tabula to create a CSV from a PDF. Then, in an effort to reduce duplicates when joining the tables, which don't have this unique ID number that is included in the PDF....I'll ask about that when I hear from the State Police. In the meantime, I did a slight modification to this sheet. I removed one of the Atlantic Guns locations. They are both in Montgomery county, but were getting doubled, I also removed a duplicate in spelling J & S pawn had two separate spellings of the same address. And I changed the name of 1237 gun shop to .1237 to be consisitent with the guns table it is saved into a new spreadsheet.
shops <- read_csv('mod_active_firearms_dealers.csv')
#this database also may contain non-gun parts like magazines and other gun accessories. May need to split data into two sets one that has null items under barrel length one that does not have nulls in barrel length.
#I also found through some testing that there are duplicate values in application numbers....I first detected this when I did a left join and got more observations then when I started. That will have to be dealt witjh at a later date.  I don't know why this is and will ask the state police upon getting a new version of this data. However, for the time being, I will use the distinct() operator in DPLYR to see if I can try and cut out these duplicates.
#NOTICED THAT there are multiple values in the guns table.
#guns_count <- guns %>%
#  group_by (`Application Number`)%>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
#went back and made sure the appliocation numbers and observation values are the same before and after data cleaning. The code is noted out so it doesn't run unless needed, but saved for posterity.
#guns <- read_csv('gun_sale_database-openrefined.csv', col_names = T)
#guns2 <- read_csv('gun_sale_database.csv')
#for both below, I found that there are 77 observations for this application number in both datasets.
#guns_filter <- guns %>%
#  filter(`Application Number` == '2017014401')
#guns2_filter <- guns2 %>%
#  filter(`Application Number` == '2017014401')
#So now I will try and get only unique application numbers to try and cut down with my dupllicates before I do a left join, in hopes that I will get the same number of values both before and after the join.
distinct_guns <- distinct(guns, `Application Number`, .keep_all = TRUE)
#ok. So now I have a distinct_guns table with 39946 obsewrvations. I will run a left join hopefully will get the same values coming out of the join.
guns_and_shops <-  left_join(distinct_guns, shops, by = "Dealer Name")
names(guns)
gun_models <- guns %>%
#the colum we are grouping
group_by(Model)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(total))
View(gun_models)
gun_types[1:10,]
gun_models <- guns %>%
#the colum we are grouping
group_by(Model)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(total))
View(gun_models)
gun_models[1:10,]
gun_models <- guns_and_shops %>%
#the colum we are grouping
group_by(Model)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(total))
gun_models <- guns_and_shops %>%
#the colum we are grouping
group_by(Model)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
gun_models
View(gun_models)
#where are these guns being sold?
gun_sales <- guns_and_shops %>%
group_by("Dealer Name") %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
gun_sales[1:10,]
View(gun_sales)
gun_sales[1:10,]
gun_sales <- guns_and_shops %>%
group_by(Dealer Name) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
View(guns_and_shops)
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name`) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales[1:10,]
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name` , Model) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales[1:10,]
View(gun_sales)
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name` ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales[1:10,]
#what are they selling?
gun_sales_models <- guns_and_shops %>%
group_by(`Dealer Name` , Model) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales_models[1:10,]
#where are these guns being sold?
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name`, County ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales[1:10,]
View(shops)
?distinct
?left_join
gun_sales_models <- guns_and_shops %>%
group_by( Model) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
#what are they selling?
gun_sales_caliber <- guns_and_shops %>%
group_by( Caliber) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales_caliber)
gun_sales_caliber[1:10,]
#what are they selling?
gun_caliber <- guns_and_shops %>%
group_by( Caliber) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales_caliber)
gun_caliber[1:10,]
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name`, County ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales)
gun_sales[1:10,]
gun_sales <- guns_and_shops %>%
group_by(`Dealer Name` ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
gun_sales[1:10,]
gun_models <- guns_and_shops %>%
#the colum we are grouping
group_by(Model)  %>%
#creates a count with the row name being count. The n value is the number of times it occurs
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_models)
gun_models[1:10,]
View(ar_15)
ar_15 <- guns_and_shops
filter(Model %like% "ar-15") %>%
group_by(`Dealer Name`)
View(ar_15)
deplyr::filter(Model %like% "ar-15") %>%
group_by(`Dealer Name`)
ar_15 <- guns_and_shops
dplyr::filter(Model %like% "ar-15") %>%
group_by(`Dealer Name`)
View(ar_15)
dplyr::filter(Model %like% "ar-15") %>%
group_by(`Dealer Name`)
ar_15 <- guns_and_shops
dplyr::filter(Mode %like% "ar-15") %>%
group_by(`Dealer Name`)
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(Mode %like% "ar-15") %>%
group_by(`Dealer Name`)
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(Mode %like% "ar15") %>%
group_by(`Dealer Name`)
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(Model %like% "ar15") %>%
group_by(`Dealer Name`)
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(Model %like% "ar15") %>%
group_by(`Dealer Name`)
View(ar_15)
dplyr::filter(Model %like% "gun") %>%
group_by(`Dealer Name`)
dplyr::filter(Model %like% "15") %>%
group_by(`Dealer Name`)
ar_15 <- guns_and_shops
dplyr::filter(Model %like% "15") %>%
group_by(`Dealer Name`)
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(Caliber %like% "7.62") %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
library(stringr)
ar_15 <- guns_and_shops
dplyr::filter(str_detect(Caliber %like% "7.62")) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops
dplyr::filter(str_detect(Caliber, "7.62")) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops
filter(str_detect(Caliber, "7.62")) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops
filter(str_detect(guns_and_shops$Caliber, "7.62")) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
filter(str_detect(guns_and_shops$Caliber, "^7.62")) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
filter(grepl("7.62", guns_and_shops$Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("7.62", guns_and_shops$Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grep(7.62, guns_and_shops$Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grep("7.62", guns_and_shops$Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grep("7.62", guns_and_shops$Caliber)) %>%
group_by(Model) %>%
summarise(count = n())
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grep("7.62", Caliber)) %>%
group_by(Model) %>%
summarise(count = n())
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("7.62", Caliber)) %>%
group_by(Model) %>%
summarise(count = n())
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("7.62", Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n())
View(ar_15)
#modeled from https://awakeningdatascientist.wordpress.com/2015/07/20/r-of-the-day-grep-and-grepl/
ar_15 <- guns_and_shops %>%
filter(grepl("7.62|762" , Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n())
View(ar_15)
#modeled from https://awakeningdatascientist.wordpress.com/2015/07/20/r-of-the-day-grep-and-grepl/
ar_15 <- guns_and_shops %>%
filter(grepl("7.62|762" , Caliber)) %>%
group_by(Model) %>%
summarise(count = n())
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("7.62|762" , Caliber)) %>%
group_by(Model) %>%
summarise(count = n())
arrange(desc(count))
View(ar_15)
#modeled from https://awakeningdatascientist.wordpress.com/2015/07/20/r-of-the-day-grep-and-grepl/
ar_15 <- guns_and_shops %>%
filter(grepl("7.62|762" , Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762" , Caliber)) %>%
group_by(Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762" , Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", names(Caliber))) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", names(Caliber))) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", names(Caliber))) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grep("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
class(guns_and_shops$Caliber)
ar_15 <- guns_and_shops %>%
filter(grep("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", Caliber)) %>%
# group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", Caliber)) %>%
# group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", Caliber)) %>%
# group_by(Caliber, Model) %>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|57|6.5|65|6.8|68|7.62|762", Caliber))
# group_by(Caliber, Model) %>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762", Caliber))
# group_by(Caliber, Model) %>%
#  summarise(count = n()) %>%
#  arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762", Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
ar_15 <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762", Caliber)) %>%
group_by( Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(ar_15)
big_bullets <- guns_and_shops %>%
filter(grepl("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762", Caliber)) %>%
group_by( Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(big_bullets)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber)) %>%
group_by( Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber, ignore.case = T)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber, ignore.case = T)) %>%
filter(Caliber != "7.62")
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber, ignore.case = T)) %>%
filter(Caliber != "7.62")
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber, ignore.case = T)) %>%
filter(Caliber != "7.62%")
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
test <- guns_and_shops %>%
select_(Caliber, contains("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762")) %>%
group_by( Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(test)
test <- guns_and_shops %>%
select_(Caliber, matches("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762")) %>%
group_by( Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View(test)
ninemm_guns <- guns_and_shops %>%
filter(grepl("9", Caliber, ignore.case = T)) %>%
filter(!grepl("5.45|545|5.56|556|5.7|6.5|65|6.8|68|7.62|762", Caliber)) %>%
group_by(Caliber, Model) %>%
summarise(count = n()) %>%
arrange(desc(count))
View( ninemm_guns)
gun_caliber <- guns_and_shops %>%
group_by( Caliber) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_sales_caliber)
gun_caliber[1:10,]
View(distinct_guns)
gun_make <- guns_and_shops %>%
group_by(Make ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_make)
gun_make[1:10,]
gun_shop_county <- guns_and_shops %>%
group_by(County ) %>%
summarise(count = n()) %>%
#arrange the list in descending order
arrange(desc(count))
View(gun_shop_county)
gun_shop_county[1:10,]
